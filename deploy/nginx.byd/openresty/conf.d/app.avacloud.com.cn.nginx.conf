 server {
   listen   80;
   server_name  app.avacloud.com.cn;
   ignore_invalid_headers off;
   location ~* /(cn|com)/my[0-9]+/ {
     resolver 223.5.5.5 223.6.6.6;
     set $cur_proxy $request_uri;
     set $cur_domain $request_uri;
     access_by_lua_block {
       local split = require "splitstr"
       local new_request_uri = ngx.var.request_uri  
       ngx.log(ngx.ERR,"request_uri:",new_request_uri)
       local http_array = split.lua_string_split(new_request_uri,"/")
       ngx.var.cur_domain = http_array[2]
       ngx.var.cur_proxy = http_array[3]          
       if ngx.var.cur_domain == "cn" then 
         ngx.var.cur_domain = "sapbyd."..ngx.var.cur_domain
       end
       if ngx.var.cur_domain == "com" then
         ngx.var.cur_domain = "sapbydesign."..ngx.var.cur_domain
       end
       ngx.log(ngx.ERR,"proxy:",ngx.var.cur_proxy)
       ngx.log(ngx.ERR,"domain:",ngx.var.cur_domain)
   }
   if ($request_method = 'OPTIONS') {
     add_header Access-Control-Allow-Origin $http_origin;
     add_header Access-Control-Allow-Credentials true;
     add_header Access-Control-Allow-Headers $http_access_control_request_headers;
     add_header Access-Control-Allow-Headers x-sap-request-xsrf,x-csrf-token,authorization,origin,x-requested-with,access-control-request-headers,content-type,access-control-request-method,accept;
     add_header Access-Control-Expose-Headers x-sap-request-xsrf,x-csrf-token,authorization,origin,x-requested-with,access-control-request-headers,content-type,access-control-request-method,accept,sap-xsrf;
     add_header Access-Control-Allow-Methods GET,POST,DELETE,PUT,OPTIONS;
     return 200;
   }
          
   rewrite ^/(cn|com)/my[0-9]+/(.*)$ /$2 break;
   proxy_pass  https://$cur_proxy.$cur_domain/$2;
   proxy_cookie_path /sap/ap/ui/login /;
 }
}
