-- local req = require "req"
local cjson = require "cjson"
local http = require "resty.http"
function call_platform_runk8s(token,code,port)
  local httpc = http.new()
  local params = {}
  params['token'] = token
  params['customerCode'] = code
  params['port'] = port
  params['serverCode'] = 'SERVER'
  params['namespace'] = 'customer' 
  local res,err = httpc:request_uri("https://console.avacloud.com.cn/customermanagement/services/rest/data/runK8sForOpen?"..ngx.encode_args(params),{
    method = "GET",
    headers = {
      ["Accept"] = "*",
      ["Accept-Encoding"] = "UTF-8",
    },
    ssl_verify = false
  })
  --ngx.say("https://console.avacloud.com.cn/customermanagement/services/rest/data/runK8sForOpen?"..ngx.encode_args(params)) 
  --httpc:set_keepalive(120)
  if not res then
    ngx.say("request error :",err)
  end
  
  return res.body
end

function lua_string_split(szFullString, szSeparator)  
local nFindStartIndex = 1  
local nSplitIndex = 1  
local nSplitArray = {}  
while true do  
   local nFindLastIndex = string.find(szFullString, szSeparator, nFindStartIndex)  
   if not nFindLastIndex then  
    nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, string.len(szFullString))  
    break  
   end  
   nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, nFindLastIndex - 1)  
   nFindStartIndex = nFindLastIndex + string.len(szSeparator)  
   nSplitIndex = nSplitIndex + 1  
end  
return nSplitArray  
end

function get_request_uri(uri,flag)
  local httpss = http.new()
  local http_uri = ngx.var.request_uri
  local http_array = lua_string_split(http_uri,"/")
  local size = table.getn(http_array)
  local account = http_array[2]
  local accountcode = http_array[3]
  local port = string.sub(accountcode,2)
  local res_token = get_platform_token("https://console.avacloud.com.cn/initialfantasy/services/rest/data/userConnect?","admin","1qaz@WSX")
  if res_token == nil then
    return
  end
  local api_flat = flag
  local api_status = 404
  local res2 = ngx.location.capture(uri)
  api_staus = res2.status
  ngx.say(api_status)
  if api_status == 200 then return  end
  if api_status == 404 and api_flat == 1 then 
    api_flat = call_platform_runk8s(res_token,account,port)
  end
  while api_status == 404 do 
    get_request_uri(uri,api_flat)
  end
end

function sleep(n)
 os.execute("sleep ".. n)
end

function get_platform_token(uri,user,password)
  local httpc = http.new()
  local uri = uri
  local params = {}
  params['user'] = user
  params['password'] = password
  local res,err = httpc:request_uri(uri..ngx.encode_args(params),{
   method = "POST",
   headers = {
      ["Accept"] = "application/json",
      ["Accept-Encoding"] = "UTF-8",
   },
   ssl_verify = false
  })
  if not res then
    ngx.say("request token error:",err)
  end
  local token = ''
  local response = cjson.decode(res.body) 
  for i, w in ipairs(response.ResultObjects) do
    token = w.Token
  end
  return token
end 

local http_host = "https://api.avacloud.com.cn"
local http_uri = ngx.var.request_uri
local http_array = lua_string_split(http_uri,"/")
local size = table.getn(http_array)
local account = http_array[2]
local accountcode = http_array[3]
local port = string.sub(accountcode,2)
local uri = http_host..http_uri
get_request_uri(uri,1)


