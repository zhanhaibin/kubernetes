# j
upstream backend {
  server 127.0.0.1;
}

server {
        listen       80;
        server_name  api.avacloud.com.cn; 
         
        location ~ /lua/(.+) {
           default_type text/html;
           resolver 223.5.5.5 223.6.6.6;  # 这里位设置阿里的DNS，不设置DNS无法解析http请求的域名
           content_by_lua_file lua/$1.lua;
        }
        
        location / {
          default_type text/html;
          resolver 223.5.5.5 223.6.6.6;
         
          set $upstream "backend";
          access_by_lua_block {
            local redis = require "redis"
            local split = require "splitstr"
            local ibas = require "ibas"
            local ibasredis = require "ibas_redis"
            local request_uri = ngx.var.request_uri
            local http_array = split.lua_string_split(request_uri,"/")
            local size = table.getn(http_array)
            local namespace = http_array[2]
            local accountencode = http_array[3]
            local accountport = string.sub(http_array[4],2)
            local restoken = ibas.get_platform_token("admin","1qaz@WSX")
            local customer = ibas.get_platform_customercode(restoken,accountencode)
            local getredis = ibasredis.get_ibas_redis(customer..accountport)
             
            -- local resk8s = ibas.get_platform_runk8s(restoken,accountencode,accountport,namespace)
            ngx.var.upstream = customer..accountport
            local url = "server "..customer.."-"..accountport.."-svc."..namespace..".svc.cluster.local:80;"
            if getredis == ngx.null then
              local res,err = ngx.location.capture("/upstream/"..customer..accountport,{ method = ngx.HTTP_POST, body = url})
              if res.body == "success" then
                ibasredis.set_ibas_redis(customer..accountport,url)
              end
            end
          }
          rewrite ^/(.*)/integration/(.*)$ /integration/$2;
          proxy_pass http://$upstream;
          proxy_redirect off;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;

          
        }
        location /detail {
          dyups_interface;
        }
        location /list {
          dyups_interface;
        }
        location /upstream {
          dyups_interface;
        }
       
        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
  }


